import{I as h,D as p,a as E,b as k,E as b,m as L,s as v,c as m}from"../../../const.js";import{a as T}from"../../../ankiConnectUtil.js";(async()=>{var o={};console.log("isOnChrome?",h),chrome.runtime.onInstalled.addListener(()=>{chrome.storage.sync.set({options:p}),h&&!E&&chrome.tabs.create({url:"chrome://extensions/?options="+chrome.runtime.id,active:!0})});let d=p;k.get("options").then(e=>{d=e.options||p});var i=d.shouldStartEnabled.value;f(),u();function u(){let e=d.selectedLanguages.value;e.map(a=>{o[a]={}}),x(o,e),y(o),O(o,e)}function x(e,a){a.map(async t=>{e[t].dict={};const n=chrome.runtime.getURL("assets/data/dicts/"+t+".csv"),s=await fetch(n);s.ok?((await s.text()).split(`
`).map(l=>{const[c,g]=l.split(",");c&&g&&(e[t].dict[c]=g.trim())}),console.log(t,"language dict is loaded with",Object.keys(e[t].dict).length,"entries")):console.error(b,": unable to load dict for "+t)})}async function y(e,a){const t=chrome.runtime.getURL("assets/data/genders.csv"),n=await fetch(t);if(n.ok){let s=await n.text(),r=w(s);Object.entries(r).forEach(([l,c])=>{try{e[l].genders=c}catch(g){if(!(g instanceof TypeError))throw g}})}}function O(e,a){a.map(t=>{e[t].flagURL=chrome.runtime.getURL(`assets/data/flags/${t}.svg`)})}chrome.runtime.onMessage.addListener((e,a,t)=>{switch(e.type){case"getGender":let n=[];d.selectedLanguages.value.map(s=>{const r=o[s].dict[e.word],l=o[s].genders[r],c=o[s].flagURL;r&&n.push({countryCode:s,gender:r,wordForGender:l,flagURL:c,isSvelteComponent:!1})}),v(n,"language"),t({data:n});break;case"isExtensionOn":t({isExtensionOn:i});break;case"updateOptions":d=e.data,u(),L({type:"updateOptions",data:e.data});break;case"runAnkiRequest":return T(e.data.action,e.data.params).then(s=>{t({response:s})}),!0}}),chrome.tabs.onUpdated.addListener((e,a,t)=>{a.status=="complete"}),m.setBadgeBackgroundColor({color:[245,30,30,255]}),m.onClicked.addListener(e=>{L({type:i?"disableExtension":"enableExtension"}),i=!i,f(),console.log(b,": toggling extension! now",i)});function f(){i?m.setBadgeText({text:"On"}):m.setBadgeText({text:""})}function w(e){let a={};const t=e.split(`
`);for(let n=1;n<t.length;n++){const s=t[n].split(",");a[s[0]]={m:s[1],f:s[2],n:s[3].trim()}}return a}})();
//# sourceMappingURL=background.js.map
