{"version":3,"file":"const.js","sources":["../../src/js/util.js","../../src/js/const.js"],"sourcesContent":["import { DEFAULT_OPTIONS, HTML_ESCAPE_LIST, IS_CHROME, browserStorageSync } from \"./const\";\r\n\r\n// https://stackoverflow.com/a/1038781\r\nexport function getPageWidth() {\r\n    return Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n  }\r\n  \r\nexport function getPageHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nexport function areArraysEqual(array1, array2) {\r\n    return array1.length === array2.length && array1.every(function(value, index) { return value === array2[index]})\r\n}\r\n\r\nexport function sortObjectArrayByKey(_array, key) {\r\n    const array = _array.slice()\r\n    array.sort(\r\n    (a, b) => {\r\n        if ((a == undefined) || (b == undefined)) return 0\r\n        const aUpper = a[key];\r\n        const bUpper = b[key];\r\n        if (aUpper < bUpper) {\r\n          return -1;\r\n        }\r\n        if (aUpper > bUpper) {\r\n          return 1;\r\n        }\r\n        // names must be equal\r\n        return 0;\r\n      }\r\n    )\r\n    return array\r\n}\r\n\r\n// IF YOU GET \r\n// Uncaught (in promise) Error: Could not establish connection. Receiving end does not exist.\r\n// THAT JUST MEANS the content script is inactive in that tab. nothing to worry about.\r\n// https://stackoverflow.com/a/68896301 send message to all tabs\r\nexport function messageAllTabs(message) {\r\n  chrome.tabs.query({}, (tabs) => tabs.forEach( tab => {\r\n    chrome.tabs.sendMessage(tab.id, message)\r\n  } ) )\r\n}\r\n\r\nexport function escapeHtml(content) {\r\n  for (const [key, value] of Object.entries(HTML_ESCAPE_LIST)) {\r\n    content = content.replaceAll(key, value)\r\n  }\r\n  return content\r\n}\r\n\r\nexport function loadOptionsInto(optionVariable) {\r\n  let options = DEFAULT_OPTIONS\r\n  // try load from sync\r\n  browserStorageSync.get('options').then(result => {\r\n    options = result.options || DEFAULT_OPTIONS\r\n    optionVariable = options\r\n  })\r\n}\r\n\r\n// ADAPTED FROM https://stackoverflow.com/a/14853974\r\nexport function compareArrays(arr1, arr2) {\r\n  // if the other array is a falsy value, return\r\n  if (!arr2)\r\n      return false;\r\n  // if the argument is the same array, we can be sure the contents are same as well\r\n  if(arr2 === arr1)\r\n      return true;\r\n  // compare lengths - can save a lot of time \r\n  if (arr1.length != arr2.length)\r\n      return false;\r\n\r\n  for (var i = 0, l=arr1.length; i < l; i++) {\r\n      // Check if we have nested arrays\r\n      if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\r\n          // recurse into the nested arrays\r\n          if (!arr1[i].equals(arr2[i]))\r\n              return false;       \r\n      }           \r\n      else if (arr1[i] != arr2[i]) { \r\n          // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n          return false;   \r\n      }           \r\n  }       \r\n  return true;\r\n}\r\n\r\n// https://stackoverflow.com/a/45985333\r\nexport function getBrowser() {\r\n  if (typeof chrome !== \"undefined\") {\r\n    if (typeof browser !== \"undefined\") {\r\n      return \"firefox\"\r\n    } else {\r\n      return \"chrome\"\r\n    }\r\n  } else {\r\n    return \"other\"\r\n  }\r\n}\r\n\r\nexport function isChrome() {\r\n    if (typeof browser !== \"undefined\") {\r\n      return false\r\n    } \r\n    return true\r\n}\r\n\r\nexport function getBrowserAction() {\r\n  console.log('testin', IS_CHROME, chrome, chrome.action)\r\n  if (IS_CHROME) {\r\n    return chrome.action\r\n  } else {\r\n    return browser.browserAction\r\n  }\r\n}\r\n\r\nexport function getBrowserStorageSync() {\r\n  if (IS_CHROME) {\r\n    return chrome.storage.sync\r\n  } else {\r\n    return browser.storage.sync\r\n  }\r\n}","import { getBrowserAction, getBrowserStorageSync, isChrome } from \"./util\"\r\n\r\n// TODO: pass an arg through dev script that enables this \r\nexport const IN_DEV = true\r\n\r\n// export const BROWSER = getBrowser()\r\nexport const IS_CHROME = isChrome()\r\n\r\nexport const EXTENSION_ALIAS = 'meemo'\r\n\r\nexport const DEFAULT_OPTIONS = {\r\n    selectedLanguages: {\r\n        description: 'The languages that the selected word will be matched against',\r\n        type: 'languageSelection',\r\n        value: ['de']\r\n    },\r\n    shouldStartEnabled: {\r\n        description: 'Whether the extension should be enabled by default upon opening the browser',\r\n        type: 'bool',\r\n        value: true,\r\n    },\r\n    UIScale: {\r\n        description: 'Size of the hover utility',\r\n        type: 'float',\r\n        value: 1\r\n    },\r\n    distanceToMouse: {\r\n        description: 'Distance between from the hover utility to the cursor',\r\n        type: 'float',\r\n        value: 8\r\n    },\r\n    shouldPopupBePinned: {\r\n        description: 'Whether popup should stay fixed to the screen rather than the page',\r\n        type: 'bool',\r\n        value: true,\r\n    },\r\n    useMotion: {\r\n        description: 'Play animations and transitions, such as when moving your cursor or spawning the popup (disabling this should help if your computer is a literal potato)',\r\n        type: 'bool',\r\n        value: true,\r\n    }\r\n\r\n}\r\n// quick hack to retain object order. we only need it for display in the options page so this is fine\r\nexport const OPTION_ORDER = Object.keys(DEFAULT_OPTIONS)\r\n\r\nexport const AVAILABLE_LANGUAGES = [\r\n    // 'pt', \r\n    'de',\r\n]\r\n\r\nexport const HTML_ESCAPE_LIST = {\r\n    // '&': '&amp;',\r\n    '<': '&lt;',\r\n    '>': '&gt;',\r\n}\r\n\r\nexport const REPLACEMENT_STRING = '$replace$'\r\n\r\nexport const browserAction = getBrowserAction()\r\nexport const browserStorageSync = getBrowserStorageSync()"],"names":["getPageWidth","sortObjectArrayByKey","_array","key","array","a","b","aUpper","bUpper","messageAllTabs","message","tabs","tab","escapeHtml","content","value","HTML_ESCAPE_LIST","isChrome","getBrowserAction","IS_CHROME","getBrowserStorageSync","IN_DEV","EXTENSION_ALIAS","DEFAULT_OPTIONS","OPTION_ORDER","AVAILABLE_LANGUAGES","REPLACEMENT_STRING","browserAction","browserStorageSync"],"mappings":"AAGO,SAASA,GAAe,CAC3B,OAAO,KAAK,IACV,SAAS,KAAK,YACd,SAAS,gBAAgB,YACzB,SAAS,KAAK,YACd,SAAS,gBAAgB,YACzB,SAAS,gBAAgB,WAC/B,CACG,CAgBI,SAASC,EAAqBC,EAAQC,EAAK,CAC9C,MAAMC,EAAQF,EAAO,MAAO,EAC5B,OAAAE,EAAM,KACN,CAACC,EAAGC,IAAM,CACN,GAAKD,GAAK,MAAeC,GAAK,KAAY,MAAO,GACjD,MAAMC,EAASF,EAAEF,CAAG,EACdK,EAASF,EAAEH,CAAG,EACpB,OAAII,EAASC,EACJ,GAELD,EAASC,EACJ,EAGF,CACR,CACF,EACMJ,CACX,CAMO,SAASK,EAAeC,EAAS,CACtC,OAAO,KAAK,MAAM,CAAE,EAAGC,GAASA,EAAK,QAASC,GAAO,CACnD,OAAO,KAAK,YAAYA,EAAI,GAAIF,CAAO,CAC3C,EAAO,CACP,CAEO,SAASG,EAAWC,EAAS,CAClC,SAAW,CAACX,EAAKY,CAAK,IAAK,OAAO,QAAQC,CAAgB,EACxDF,EAAUA,EAAQ,WAAWX,EAAKY,CAAK,EAEzC,OAAOD,CACT,CAmDO,SAASG,GAAW,CACvB,MAAI,SAAO,QAAY,IAI3B,CAEO,SAASC,GAAmB,CAEjC,OADA,QAAQ,IAAI,SAAUC,EAAW,OAAQ,OAAO,MAAM,EAClDA,EACK,OAAO,OAEP,QAAQ,aAEnB,CAEO,SAASC,GAAwB,CACtC,OAAID,EACK,OAAO,QAAQ,KAEf,QAAQ,QAAQ,IAE3B,CCpIY,MAACE,EAAS,GAGTF,EAAYF,EAAU,EAEtBK,EAAkB,QAElBC,EAAkB,CAC3B,kBAAmB,CACf,YAAa,+DACb,KAAM,oBACN,MAAO,CAAC,IAAI,CACf,EACD,mBAAoB,CAChB,YAAa,8EACb,KAAM,OACN,MAAO,EACV,EACD,QAAS,CACL,YAAa,4BACb,KAAM,QACN,MAAO,CACV,EACD,gBAAiB,CACb,YAAa,wDACb,KAAM,QACN,MAAO,CACV,EACD,oBAAqB,CACjB,YAAa,qEACb,KAAM,OACN,MAAO,EACV,EACD,UAAW,CACP,YAAa,2JACb,KAAM,OACN,MAAO,EACV,CAEL,EAEaC,EAAe,OAAO,KAAKD,CAAe,EAE1CE,EAAsB,CAE/B,IACJ,EAEaT,EAAmB,CAE5B,IAAK,OACL,IAAK,MACT,EAEaU,EAAqB,YAErBC,EAAgBT,EAAkB,EAClCU,EAAqBR,EAAqB"}