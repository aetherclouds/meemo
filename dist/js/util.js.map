{"version":3,"file":"util.js","sources":["../../src/ankiConnectUtil.js","../../src/util.js"],"sourcesContent":["export class AnkiConnectionError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"AnkiConnectionError\";\r\n  }\r\n}\r\n\r\nexport class AnkiResponseError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"AnkiResponseError\";\r\n  }\r\n}\r\n\r\nexport async function ankiRequestThroughBg(action, params={}) {\r\n  const response = (await chrome.runtime.sendMessage({type: 'runAnkiRequest', data: {action, params}})).response\r\n  // console.log('receiving anki response:', response)\r\n  if (response.error) {\r\n    console.error(response.error)\r\n    switch (response.error) {\r\n      case 'AnkiConnectionError':\r\n        throw new AnkiConnectionError()\r\n      case 'AnkiResponseError':\r\n        throw new AnkiResponseError()\r\n      default:\r\n        throw new Error(response.error.name)\r\n    }\r\n  } else {\r\n    return response.response\r\n  }\r\n}\r\n\r\nexport async function ankiRequest(action, params={}, version=6) {\r\n  const data = {action, version, params}\r\n  return fetch('http://127.0.0.1:8765', {\r\n    method: \"POST\",\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(data)\r\n  }).then(async promisedResponse => { \r\n    if (!promisedResponse.ok) {\r\n      throw AnkiResponseError()\r\n    } else {\r\n      const response = await promisedResponse.json()\r\n      // console.log('unprocessed response:',response)\r\n      if (response.result === null) {\r\n        throw new AnkiResponseError(response.error)\r\n      }\r\n      return {response: response.result, error: null}\r\n    }\r\n  }\r\n  ).catch(err => {\r\n    if (!(err instanceof AnkiResponseError)) {\r\n      err = new AnkiConnectionError(err.response)\r\n    }\r\n    return {response: null, error: err.name}\r\n  })\r\n}\r\n\r\n// here's what we gotta do:\r\n// 1: get models\r\n// 2: get decks\r\n// - display models & decks for selection\r\n// 3: add note\r\n\r\nexport async function getModelNames() {\r\n  return ankiRequestThroughBg('modelNames')\r\n}\r\nexport async function getDeckNames() {\r\n  return ankiRequestThroughBg('deckNames')\r\n}\r\n\r\nexport async function getModelFieldNames(modelName) {\r\n  return ankiRequestThroughBg('modelFieldNames', {'modelName': modelName})\r\n}\r\n\r\nexport async function addNote(deckName, modelName, fields) {\r\n  return ankiRequestThroughBg('addNote', {\r\n    'note': {\r\n      'deckName': deckName,\r\n      'modelName': modelName,\r\n      'fields': fields,\r\n      'tags': ['fromMeemo!'],\r\n      \"options\": {\r\n        \"allowDuplicate\": true,\r\n    },\r\n    }\r\n  })\r\n}\r\n\r\nexport async function test() {\r\n  const response = await ankiRequestThroughBg('modelNames',)\r\n  console.log(await getDeckNames())\r\n    console.log(response)\r\n}","import { HTML_ESCAPE_LIST } from \"./const\";\r\n\r\n// https://stackoverflow.com/a/1038781\r\nexport function getPageWidth() {\r\n    return Math.max(\r\n      document.body.scrollWidth,\r\n      document.documentElement.scrollWidth,\r\n      document.body.offsetWidth,\r\n      document.documentElement.offsetWidth,\r\n      document.documentElement.clientWidth\r\n    );\r\n  }\r\n  \r\nexport function getPageHeight() {\r\n    return Math.max(\r\n        document.body.scrollHeight,\r\n        document.documentElement.scrollHeight,\r\n        document.body.offsetHeight,\r\n        document.documentElement.offsetHeight,\r\n        document.documentElement.clientHeight\r\n    );\r\n}\r\n\r\nexport function areArraysEqual(array1, array2) {\r\n    return array1.length === array2.length && array1.every(function(value, index) { return value === array2[index]})\r\n}\r\n\r\nexport function sortObjectArrayByKey(_array, key) {\r\n    const array = _array.slice()\r\n    array.sort(\r\n    (a, b) => {\r\n        if ((a == undefined) || (b == undefined)) return 0\r\n        const aUpper = a[key];\r\n        const bUpper = b[key];\r\n        if (aUpper < bUpper) {\r\n          return -1;\r\n        }\r\n        if (aUpper > bUpper) {\r\n          return 1;\r\n        }\r\n        // names must be equal\r\n        return 0;\r\n      }\r\n    )\r\n    return array\r\n}\r\n\r\n// IF YOU GET \r\n// Uncaught (in promise) Error: Could not establish connection. Receiving end does not exist.\r\n// THAT JUST MEANS the content script is inactive in that tab. nothing to worry about.\r\nexport function messageAllTabs(message) {\r\n  chrome.tabs.query({}, (tabs) => tabs.forEach( tab => {\r\n    chrome.tabs.sendMessage(tab.id, message)\r\n  } ) )\r\n}\r\n\r\nexport function escapeHtml(content) {\r\n  for (const [key, value] of Object.entries(HTML_ESCAPE_LIST)) {\r\n    content = content.replaceAll(key, value)\r\n  }\r\n  content\r\n  return content\r\n}\r\n\r\nexport function loadOptions() {\r\n  let options = DEFAULT_OPTIONS\r\n  // try load from sync\r\n  chrome.storage.sync.get('options').then(result => {\r\n    options = result.options || DEFAULT_OPTIONS\r\n  })\r\n  return options\r\n}\r\n\r\n// ADAPTED FROM https://stackoverflow.com/a/14853974\r\nexport function compareArrays(arr1, arr2) {\r\n  // if the other array is a falsy value, return\r\n  if (!arr2)\r\n      return false;\r\n  // if the argument is the same array, we can be sure the contents are same as well\r\n  if(arr2 === arr1)\r\n      return true;\r\n  // compare lengths - can save a lot of time \r\n  if (arr1.length != arr2.length)\r\n      return false;\r\n\r\n  for (var i = 0, l=arr1.length; i < l; i++) {\r\n      // Check if we have nested arrays\r\n      if (arr1[i] instanceof Array && arr2[i] instanceof Array) {\r\n          // recurse into the nested arrays\r\n          if (!arr1[i].equals(arr2[i]))\r\n              return false;       \r\n      }           \r\n      else if (arr1[i] != arr2[i]) { \r\n          // Warning - two different object instances will never be equal: {x:20} != {x:20}\r\n          return false;   \r\n      }           \r\n  }       \r\n  return true;\r\n}"],"names":["AnkiConnectionError","message","AnkiResponseError","ankiRequestThroughBg","action","params","response","ankiRequest","version","promisedResponse","err","getModelNames","getDeckNames","getModelFieldNames","modelName","addNote","deckName","fields","getPageWidth","sortObjectArrayByKey","_array","key","array","a","b","aUpper","bUpper","messageAllTabs","tabs","tab","escapeHtml","content","value","HTML_ESCAPE_LIST","compareArrays","arr1","arr2","i","l"],"mappings":"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"}